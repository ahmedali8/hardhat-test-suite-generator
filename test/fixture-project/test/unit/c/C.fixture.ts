import type { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
import { ethers } from "hardhat";

import type { C__factory } from "../../../typechain/factories/lib/C__factory";
import type { C } from "../../../typechain/lib/C";

export async function cFixture(): Promise<{ c: C }> {
  const signers = await ethers.getSigners();
  const deployer: SignerWithAddress = signers[0];

  const CFactory: C__factory = (await ethers.getContractFactory("C")) as C__factory;

  /* Autogenerated arguments for deploy */
  /* Please change accordingly */
  type DeployArgs = Parameters<typeof CFactory.deploy>;
  const args: DeployArgs = {} as DeployArgs;

  const c: C = (await CFactory.connect(deployer).deploy(...args)) as C;

  return { c };
}
