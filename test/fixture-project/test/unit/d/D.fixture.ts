import type { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
import { ethers } from "hardhat";

import type { D__factory } from "../../../typechain/factories/test/foo/D__factory";
import type { D } from "../../../typechain/test/foo/D";

export async function dFixture(): Promise<{ d: D }> {
  const signers = await ethers.getSigners();
  const deployer: SignerWithAddress = signers[0];

  const DFactory: D__factory = (await ethers.getContractFactory("D")) as D__factory;

  /* Autogenerated arguments for deploy */
  /* Please change accordingly */
  type DeployArgs = Parameters<typeof DFactory.deploy>;
  const args: DeployArgs = {} as DeployArgs;

  const d: D = (await DFactory.connect(deployer).deploy(...args)) as D;

  return { d };
}
